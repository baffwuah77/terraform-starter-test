name: Terraform Backend Setup (OIDC)

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - '**/*.tf'
      - '.github/workflows/**'
  workflow_dispatch:

permissions:
  id-token: write      # Required for OIDC authentication
  contents: read       # Required to checkout the code

jobs:
  terraform-plan:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Debug OIDC token request (optional troubleshooting)
      - name: Debug OIDC Token
        if: always() # Always run to capture token issues
        run: |
          echo "OIDC Request URL: $ACTIONS_ID_TOKEN_REQUEST_URL"
          echo "OIDC Request Token: $ACTIONS_ID_TOKEN_REQUEST_TOKEN"

      # 3. Configure AWS credentials using OIDC
      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::739527292067:role/github-terraform-role
          aws-region: us-east-1

      # 4. Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.8.5"

      # 5. Terraform Init with backend
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_BACKEND_BUCKET }}" \
            -backend-config="key=${{ secrets.TF_BACKEND_KEY }}" \
            -backend-config="region=${{ secrets.TF_BACKEND_REGION }}" \
            -backend-config="dynamodb_table=${{ secrets.TF_BACKEND_DYNAMODB_TABLE }}" \
            -backend-config="encrypt=true"

      # 6. Validate Terraform configuration
      - name: Terraform Validate
        run: terraform validate

      # 7. Generate Terraform plan
      - name: Terraform Plan
        run: terraform plan -out=tfplan

      # 8. Upload plan artifact
      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

  terraform-apply:
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.event_name == 'workflow_dispatch'  # Only run manually via workflow dispatch

    steps:
      # 1. Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configure AWS credentials using OIDC
      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::739527292067:role/github-terraform-role
          aws-region: us-east-1

      # 3. Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.8.5"

      # 4. Download Terraform plan artifact
      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      # 5. Terraform Init (required before apply)
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_BACKEND_BUCKET }}" \
            -backend-config="key=${{ secrets.TF_BACKEND_KEY }}" \
            -backend-config="region=${{ secrets.TF_BACKEND_REGION }}" \
            -backend-config="dynamodb_table=${{ secrets.TF_BACKEND_DYNAMODB_TABLE }}" \
            -backend-config="encrypt=true"

      # 6. Terraform Apply
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
